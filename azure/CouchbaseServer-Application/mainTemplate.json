{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "serverNodeCount": {
      "type": "int",
      "allowedValues": [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 ],
      "defaultValue": 3
    },
    "serverDiskSize": {
      "type": "int",
      "allowedValues": [ 32, 64, 128, 512, 1024, 2048, 4096 ],
      "defaultValue": 512
    },
    "authenticationType": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": ""
    },
    "sshPublicKey": {
      "type": "securestring",
      "defaultValue": ""
    },
    "serverVersion": {
      "type": "string",
      "defaultValue": "7.0.2"
    },
    "vmSize": {
      "type": "string",
      "allowedValues": [
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_FS4",
        "Standard_FS8",
        "Standard_FS16",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_E2_v3",
        "Standard_E4_v3",
        "Standard_E8_v3",
        "Standard_E16_v3",
        "Standard_E20_v3",
        "Standard_E32_v3",
        "Standard_E48_v3",
        "Standard_E64_v3",
        "Standard_E64i_v3",
        "Standard_E2s_v3",
        "Standard_E4s_v3",
        "Standard_E8s_v3",
        "Standard_E16s_v3",
        "Standard_E20s_v3",
        "Standard_E32s_v3",
        "Standard_E48s_v3",
        "Standard_E64s_v3",
        "Standard_E64is_v3"
      ]
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser"
    },
    "serverUsername": {
      "type": "string",
      "defaultValue": "couchbase"
    },
    "serverPassword": {
      "type": "securestring"
    },
    "enableMDS": {
      "type": "bool",
      "defaultValue": false
    },
    "mdsConfig": {
      "type": "array",
      "maxLength": 10,
      "defaultValue": []
    },
    "couchbaseServices": {
      "type": "string"
    },
    "vnet": {
      "type": "object",
      "defaultValue": {
        "value": {
          "name": "Couchbase-Vnet",
          "resourceGroup": "[parameters('resourceGroup')]",
          "addressPrefixes": [
            "10.32.0.0/16"
          ],
          "addressPrefix": "10.32.0.0/16",
          "newOrExisting": "[parameters('newOrExisting')]",
          "subnets": {
            "subnet1": {
              "name": "CouchbaseSubnet",
              "addressPrefix": "10.32.0.0/24",
              "startAddress": "10.32.0.4"
            }
          }
        }
      }
    },
    "license": {
      "type": "string",
      "defaultValue": "<<LICENSE>>"
    },
    "publisher": {
      "type": "string",
      "defaultValue": "<<PUBLISHER>>"
    },
    "offer": {
      "type": "string",
      "defaultValue": "<<OFFER>>"
    },
    "image_version": {
      "type": "string",
      "defaultValue": "latest"
    },
    "_now": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    },
    "resourceGroup": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "newOrExisting": {
      "type": "string",
      "defaultValue": "new"
    }
  },
  "functions": [
    {
      "namespace": "couchbase",
      "members": {
        "generateResourceName": {
          "parameters": [
            {
              "name": "resource",
              "type": "string"
            },
            {
              "name": "now",
              "type": "string"
            }
          ],
          "output": {
            "type": "string",
            "value": "[
                              concat(
                                      'cb-', 
                                      parameters('resource'),
                                      '-', 
                                      uniquestring(resourceGroup().id, deployment().name, parameters('now'))
                                    )
                            ]"
          }
        },
        "arrayToCSV": {
          "parameters": [
            {
              "name": "stringArray",
              "type": "string"
            }
          ],
          "output": {
            "type": "string",
            "value": "[replace(replace(replace(parameters('stringArray'), '[', ''), ']', ''), '\"', '')]"
          }
        },
        "getProfileWithPrefix": {
          "parameters": [
            {
              "name": "profile",
              "type": "object"
            },
            {
              "name": "prefix",
              "type": "string"
            }
          ],
          "output": {
            "type": "object",
            "value": "[union(parameters('profile'), json(concat('{\"computerNamePrefix\":\"', parameters('prefix'), '\"}')))]"
          }
        },
        "isValidMDS": {
          "parameters": [
            {
              "name": "mdsConfig",
              "type": "array"
            }
          ],
          "output": {
            "type": "bool",
            "value": "[and(greater(length(parameters('mdsConfig')), 0), greater(length(first(parameters('mdsConfig')).colServices), 0))]"
          }
        }
      }
    }
  ],
  "variables": {
    "uniqueString": "[uniquestring(resourceGroup().id, deployment().name)]",
    "serverPubIP": "[
                      concat(
                        resourceGroup().id, 
                        '/providers/Microsoft.Compute/virtualMachineScaleSets/',
                        couchbase.generateResourceName('server-main', parameters('_now')), 
                        '/virtualMachines/0/networkInterfaces/',
                        couchbase.generateResourceName('server-nic', parameters('_now')),
                        '/ipConfigurations/',
                        couchbase.generateResourceName('server-ipconfig', parameters('_now')),
                        '/publicIPAddresses/',
                        couchbase.generateResourceName('server-public-ip', parameters('_now'))
                      )
                    ]",
    "password_osProfile": {
      "adminUsername": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]"
    },
    "sshPublicKey_osProfile": {
      "adminUsername": "[parameters('adminUsername')]",
      "linuxConfiguration": {
        "disablePasswordAuthentication": "true",
        "ssh": {
          "publicKeys": [
            {
              "path": "/home/azureuser/.ssh/authorized_keys",
              "keyData": "[parameters('sshPublicKey')]"
            }
          ]
        }
      }
    },
    "osProfile": "[if(equals(parameters('authenticationType'), 'password'), variables('password_osProfile'), variables('sshPublicKey_osProfile'))]",
    "secretValue": {
      "username": "[parameters('serverUsername')]",
      "password": "[parameters('serverPassword')]"
    },
    "assignmentReaderGuid": "[guid(subscription().subscriptionId, resourceGroup().id, parameters('_now'))]"
  },
  "resources": [
    {
      "apiVersion": "2021-12-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[couchbase.generateResourceName('networkSecurityGroups', parameters('_now'))]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "description": "SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "ErlangPortMapper",
            "properties": {
              "description": "Erlang Port Mapper (epmd)",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "4369",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "Server",
            "properties": {
              "description": "Server",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8091-8096",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 103,
              "direction": "Inbound"
            }
          },
          {
            "name": "Index",
            "properties": {
              "description": "Index",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "9100-9105",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 104,
              "direction": "Inbound"
            }
          },
          {
            "name": "Analytics",
            "properties": {
              "description": "Analytics",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "9110-9122",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 105,
              "direction": "Inbound"
            }
          },
          {
            "name": "FTSGrpcPort",
            "properties": {
              "description": "FTSGrpcPort",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "9130",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          {
            "name": "Internal",
            "properties": {
              "description": "Internal",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "9998-9999",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 106,
              "direction": "Inbound"
            }
          },
          {
            "name": "XDCR",
            "properties": {
              "description": "XDCR",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "11207-11215",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 107,
              "direction": "Inbound"
            }
          },
          {
            "name": "SSL",
            "properties": {
              "description": "SSL",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "18091-18096",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 108,
              "direction": "Inbound"
            }
          },
          {
            "name": "NodeDataExchange",
            "properties": {
              "description": "Node data exchange",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "21100-21299",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 109,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('vnet').name]",
      "type": "Microsoft.Network/virtualNetworks",
      "condition": "[equals(parameters('newOrExisting'), 'new')]",
      "apiVersion": "2021-12-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups/', couchbase.generateResourceName('networkSecurityGroups', parameters('_now')))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": "[parameters('vnet').addressPrefixes]"
        },
        "subnets": [
          {
            "name": "[parameters('vnet').subnets.subnet1.name]",
            "properties": {
              "addressPrefix": "[parameters('vnet').subnets.subnet1.addressPrefix]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', couchbase.generateResourceName('networkSecurityGroups', parameters('_now')))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "name": "[couchbase.generateResourceName('identity', parameters('_now'))]",
      "apiVersion": "2018-11-30",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2018-09-01-preview",
      "name": "[variables('assignmentReaderGuid')]",
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', couchbase.generateResourceName('identity', parameters('_now')))]"
      ],
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleAssignments', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', couchbase.generateResourceName('identity', parameters('_now'))), '2018-11-30').principalId]",
        "principalType": "ServicePrincipal"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2019-09-01",
      "name": "[couchbase.generateResourceName('vault', parameters('_now'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', couchbase.generateResourceName('identity', parameters('_now')))]",
        "[resourceId('Microsoft.Authorization/roleAssignments', variables('assignmentReaderGuid'))]"
      ],
      "properties": {
        "enabledForDeployment": true,
        "enabledForTemplateDeployment": true,
        "enabledForDiskEncryption": false,
        "enableRbacAuthorization": false,
        "accessPolicies": [
          {
            "objectId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', couchbase.generateResourceName('identity', parameters('_now'))), '2018-11-30').principalId]",
            "permissions": {
              "secrets": [
                "Get",
                "List",
                "Set",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ]
            },
            "tenantId": "[subscription().tenantId]"
          }
        ],
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "name": "Standard",
          "family": "A"
        },
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/{1}', couchbase.generateResourceName('vault', parameters('_now')), 'cb-secret')]",
      "dependsOn": [ "[resourceId('Microsoft.KeyVault/vaults', couchbase.generateResourceName('vault', parameters('_now')))]" ],
      "properties": {
        "attributes": {
          "enabled": true
        },
        "contentType": "application/json",
        "value": "[string(variables('secretValue'))]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/{1}', couchbase.generateResourceName('vault', parameters('_now')), 'cb-rally')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', couchbase.generateResourceName('vault', parameters('_now')))]",
        "[resourceId('Microsoft.Compute/virtualMachineScaleSets', couchbase.generateResourceName('server-main', parameters('_now')))]"
      ],
      "properties": {
        "attributes": {
          "enabled": true
        },
        "contentType": "application/json",
        "value": "[reference(variables('serverPubIP'), '2017-03-30').dnsSettings.fqdn]"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[couchbase.generateResourceName('server-main', parameters('_now'))]",
      "location": "[parameters('location')]",
      "apiVersion": "2021-11-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet').name)]",
        "[resourceId('Microsoft.KeyVault/vaults', couchbase.generateResourceName('vault', parameters('_now')))]",
        "[resourceId('Microsoft.Authorization/roleAssignments', variables('assignmentReaderGuid'))]"
      ],
      "tags": {
        "couchbase-server-version": "[parameters('serverVersion')]",
        "couchbase-server-make-cluster": "true",
        "couchbase-server-services": "[couchbase.arrayToCSV(string(parameters('couchbaseServices')))]",
        "key-vault": "[couchbase.generateResourceName('vault', parameters('_now'))]",
        "couchbase-server-disk": "33",
        "couchbase-server-secret": "cb-secret"
      },
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', couchbase.generateResourceName('identity', parameters('_now')))]": {}
        }
      },
      "plan": {
        "publisher": "[parameters('publisher')]",
        "product": "[parameters('offer')]",
        "name": "[parameters('license')]"
      },
      "sku": {
        "name": "[parameters('vmSize')]",
        "tier": "Standard",
        "capacity": "[parameters('serverNodeCount')]"
      },
      "properties": {
        "overprovision": false,
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage"
            },
            "imageReference": {
              "publisher": "[parameters('publisher')]",
              "offer": "[parameters('offer')]",
              "sku": "[parameters('license')]",
              "version": "[parameters('image_version')]"
            },
            "dataDisks": [
              {
                "lun": 33,
                "createOption": "Empty",
                "managedDisk": {
                  "storageAccountType": "Premium_LRS"
                },
                "caching": "None",
                "diskSizeGB": "[parameters('serverDiskSize')]"
              }
            ]
          },
          "osProfile": "[couchbase.getProfileWithPrefix(variables('osProfile'), couchbase.generateResourceName('server-main', parameters('_now')))]",
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[couchbase.generateResourceName('server-nic', parameters('_now'))]",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "[couchbase.generateResourceName('server-ipconfig', parameters('_now'))]",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet').name ,parameters('vnet').subnets.subnet1.name)]"
                        },
                        "publicipaddressconfiguration": {
                          "name": "[couchbase.generateResourceName('server-public-ip', parameters('_now'))]",
                          "properties": {
                            "idleTimeoutInMinutes": 30,
                            "dnsSettings": {
                              "domainNameLabel": "[concat('server-', variables('uniqueString'))]"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[couchbase.generateResourceName(concat('server-', copyIndex()), parameters('_now'))]",
      "copy": {
        "name": "mds-count-copy",
        "count": "[length(parameters('mdsConfig'))]",
        "mode": "Parallel"
      },
      "condition": "[and(parameters('enableMDS'), couchbase.isValidMDS(parameters('mdsConfig')))]",
      "location": "[parameters('location')]",
      "apiVersion": "2021-11-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet').name)]",
        "[resourceId('Microsoft.KeyVault/vaults', couchbase.generateResourceName('vault', parameters('_now')))]",
        "[resourceId('Microsoft.Authorization/roleAssignments', variables('assignmentReaderGuid'))]",
        "[resourceId('Microsoft.Compute/virtualMachineScaleSets', couchbase.generateResourceName('server-main', parameters('_now')))]"
      ],
      "tags": {
        "couchbase-server-version": "[parameters('serverVersion')]",
        "couchbase-server-make-cluster": "false",
        "couchbase-server-rally-parameter": "cb-rally",
        "couchbase-server-services": "[couchbase.arrayToCSV(string(parameters('mdsConfig')[copyIndex()].colServices))]",
        "key-vault": "[couchbase.generateResourceName('vault', parameters('_now'))]",
        "couchbase-server-disk": "0",
        "couchbase-server-secret": "cb-secret"
      },
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', couchbase.generateResourceName('identity', parameters('_now')))]": {}
        }
      },
      "plan": {
        "publisher": "[parameters('publisher')]",
        "product": "[parameters('offer')]",
        "name": "[parameters('license')]"
      },
      "sku": {
        "name": "[parameters('mdsConfig')[copyIndex()].colSize]",
        "tier": "Standard",
        "capacity": "[parameters('mdsConfig')[copyIndex()].colCount]"
      },
      "properties": {
        "overprovision": false,
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage"
            },
            "imageReference": {
              "publisher": "[parameters('publisher')]",
              "offer": "[parameters('offer')]",
              "sku": "[parameters('license')]",
              "version": "[parameters('image_version')]"
            },
            "dataDisks": [
              {
                "lun": 0,
                "createOption": "Empty",
                "managedDisk": {
                  "storageAccountType": "Premium_LRS"
                },
                "caching": "None",
                "diskSizeGB": "[parameters('mdsConfig')[copyIndex()].colDiskSize]"
              }
            ]
          },
          "osProfile": "[couchbase.getProfileWithPrefix(variables('osProfile'), couchbase.generateResourceName(concat('server-', copyIndex()), parameters('_now')))]",
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[couchbase.generateResourceName(concat('server-nic-', copyIndex()), parameters('_now'))]",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "[couchbase.generateResourceName(concat('server-ipconfig-', copyIndex()), parameters('_now'))]",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet').name ,parameters('vnet').subnets.subnet1.name)]"
                        },
                        "publicipaddressconfiguration": {
                          "name": "[couchbase.generateResourceName(concat('server-public-ip-', copyIndex()), parameters('_now'))]",
                          "properties": {
                            "idleTimeoutInMinutes": 30,
                            "dnsSettings": {
                              "domainNameLabel": "[concat('server-', copyIndex(), '-', variables('uniqueString'))]"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    }
  ],
  "outputs": {
    "serverAdminURL": {
      "type": "string",
      "value": "[uri(concat('http://', reference(variables('serverPubIP'), '2017-03-30').dnsSettings.fqdn, ':8091'), '')]"
    },
    "serverRally": {
      "type": "string",
      "value": "[reference(variables('serverPubIP'), '2017-03-30').dnsSettings.fqdn]"
    }
  }
}