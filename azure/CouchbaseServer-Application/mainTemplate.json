{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "serverNodeCount": {
      "type": "int"
    },
    "serverDiskSize": {
      "type": "int"
    },
    "authenticationType": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "sshPublicKey": {
      "type": "securestring"
    },
    "serverVersion": {
      "type": "string",
      "defaultValue": "7.0.2"
    },
    "vmSize": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser"
    },
    "serverUsername": {
      "type": "string",
      "defaultValue": "couchbase"
    },
    "serverPassword": {
      "type": "securestring"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "enableMDS": {
      "type": "bool",
      "defaultValue": "false"
    },
    "mdsConfig": {
      "type": "array",
      "maxLength": 10
    },
    "services": {
      "type": "array",
      "defaultValue": [
        "data",
        "index",
        "query"
      ]
    },
    "vnet": {
      "type": "object",
      "defaultValue": {
        "value": {
          "name": "Couchbase-Vnet",
          "resourceGroup": "",
          "addressPrefixes": [
            "10.32.0.0/16"
          ],
          "addressPrefix": "10.32.0.0/16",
          "newOrExisting": "new",
          "subnets": {
            "subnet1": {
              "name": "CouchbaseSubnet",
              "addressPrefix": "10.32.0.0/24",
              "startAddress": "10.32.0.4"
            }
          }
        }
      }
    },
    "license": {
      "type": "string",
      "defaultValue": "<<LICENSE>>"
    },
    "publisher": {
      "type": "string",
      "defaultValue": "<<PUBLISHER>>"
    },
    "offer": {
      "type": "string",
      "defaultValue": "<<OFFER>>"
    },
    "image_version": {
      "type": "string",
      "defaultValue": "<<IMAGE_VERSION>>"
    },
    "_now": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    }
  },
  "functions":[
      {
        "namespace": "couchbase",
        "members": {
            "generateResourceName": {
                "parameters": [{
                  "name": "resource",
                  "type": "string"
                }],
                "output": {
                  "type": "string",
                  "value": "[
                              concat(
                                      'cb-', 
                                      parameters('resource'),
                                      '-', 
                                      uniquestring(resourceGroup().id, deployment().name)
                                    )
                            ]"
                }
          },
          "arrayToCSV": {
            "parameters": [
              {
                "name": "stringArray",
                "type": "array"
              }
            ],
            "output":{
              "type": "string",
              "value": "[replace(replace(replace(string(parameters('stringArray')), '[', ''), ']', ''), '\"', '')]"
            }
          },
          "getProfileWithPrefix": {
            "parameters": [
              {
                "name": "profile",
                "type": "object"
              },
              {
                "name": "prefix",
                "type": "string"
              }
            ],
            "output": {
              "type": "object",
              "value": "[union(parameters('profile'), json(concat('{\"computerNamePrefix\":\"', parameters('prefix'), '\"}')))]"
            }
          }
        }
    }
  ],
  "variables": {
    "uniqueString": "[uniquestring(resourceGroup().id, deployment().name)]",
    "serverPubIP": "[
                      concat(
                        resourceGroup().id, 
                        '/providers/Microsoft.Compute/virtualMachineScaleSets/',
                        couchbase.generateResourceName('server-main'), 
                        '/virtualMachines/0/networkInterfaces/',
                        couchbase.generateResourceName('server-nic'),
                        '/ipConfigurations/',
                        couchbase.generateResourceName('server-ipconfig'),
                        '/publicIPAddresses/',
                        couchbase.generateResourceName('server-public-ip')
                      )
                    ]",
    "password_osProfile": {
      "adminUsername": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]"
    },
    "sshPublicKey_osProfile": {
      "adminUsername": "[parameters('adminUsername')]",
      "linuxConfiguration": {
        "disablePasswordAuthentication": "true",
        "ssh": {
          "publicKeys": [{
            "path": "/home/azureuser/.ssh/authorized_keys",
            "keyData": "[parameters('sshPublicKey')]"
          }]
        }
      }
    },
    "osProfile": "[variables(concat(parameters('authenticationType'), '_osProfile'))]",
    "secretValue": {
      "username": "[parameters('serverUsername')]",
      "password": "[parameters('serverPassword')]"
    },
    "subscriptionReader": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
    "assignmentReaderGuid": "[guid(subscription().subscriptionId, parameters('_now'))]"
  },
  "resources": [
    {
      "apiVersion": "2019-11-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[couchbase.generateResourceName('networkSecurityGroups')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "description": "SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "ErlangPortMapper",
            "properties": {
              "description": "Erlang Port Mapper (epmd)",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "4369",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "Server",
            "properties": {
              "description": "Server",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8091-8096",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 103,
              "direction": "Inbound"
            }
          },
          {
            "name": "Index",
            "properties": {
              "description": "Index",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "9100-9105",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 104,
              "direction": "Inbound"
            }
          },
          {
            "name": "Analytics",
            "properties": {
              "description": "Analytics",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "9110-9122",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 105,
              "direction": "Inbound"
            }
          },          
          {
            "name": "FTSGrpcPort",
            "properties": {
              "description": "FTSGrpcPort",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "9130",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          {
            "name": "Internal",
            "properties": {
              "description": "Internal",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "9998-9999",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 106,
              "direction": "Inbound"
            }
          },
          {
            "name": "XDCR",
            "properties": {
              "description": "XDCR",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "11207-11215",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 107,
              "direction": "Inbound"
            }
          },
          {
            "name": "SSL",
            "properties": {
              "description": "SSL",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "18091-18096",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 108,
              "direction": "Inbound"
            }
          },
          {
            "name": "NodeDataExchange",
            "properties": {
              "description": "Node data exchange",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "21100-21299",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 109,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('vnet').name]",
      "type": "Microsoft.Network/virtualNetworks",
      "condition": "[equals(parameters('vnet').newOrExisting, 'new')]",
      "apiVersion": "2019-04-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups/', couchbase.generateResourceName('networkSecurityGroups'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": "[parameters('vnet').addressPrefixes]"
        },
        "subnets": [
          {
            "name": "[parameters('vnet').subnets.subnet1.name]",
            "properties": {
              "addressPrefix": "[parameters('vnet').subnets.subnet1.addressPrefix]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', couchbase.generateResourceName('networkSecurityGroups'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "name": "[couchbase.generateResourceName('identity')]",
      "apiVersion": "2018-11-30",
      "location": "[resourceGroup().location]"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2018-09-01-preview",
      "name": "[variables('assignmentReaderGuid')]",
      "dependsOn": [
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', couchbase.generateResourceName('identity'))]"
      ],
      "properties": {
          "roleDefinitionId": "[variables('subscriptionReader')]",
          "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', couchbase.generateResourceName('identity')), '2018-11-30').principalId]",
          "principalType": "ServicePrincipal"
      }
    },      
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2019-09-01",
      "name": "[couchbase.generateResourceName('vault')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', couchbase.generateResourceName('identity'))]",
        "[resourceId('Microsoft.Authorization/roleAssignments', variables('assignmentReaderGuid'))]"
      ],
      "tags": {},
      "properties": {
        "enabledForDeployment": true,
        "enabledForTemplateDeployment": true,
        "enabledForDiskEncryption": false,
        "enableRbacAuthorization": false,
        "accessPolicies": [
          {
            "objectId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', couchbase.generateResourceName('identity')), '2018-11-30').principalId]",
            "permissions": {
              "secrets": [
                "Get",
                "List",
                "Set",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ]
            },
            "tenantId": "[subscription().tenantId]"
          }
        ],
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "name": "Standard",
          "family": "A"
        },
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices",
          "ipRules": [],
          "virtualNetworkRules": []
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/{1}', couchbase.generateResourceName('vault'), 'cb-secret')]",
      "dependsOn": ["[resourceId('Microsoft.KeyVault/vaults', couchbase.generateResourceName('vault'))]"],
      "properties": {
        "attributes": {
          "enabled": true
        },
        "contentType": "application/json",
        "value": "[string(variables('secretValue'))]"
      }
    },
        {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/{1}', couchbase.generateResourceName('vault'), 'cb-rally')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', couchbase.generateResourceName('vault'))]",
        "[resourceId('Microsoft.Compute/virtualMachineScaleSets', couchbase.generateResourceName('server-main'))]"
      ],
      "properties": {
        "attributes": {
          "enabled": true
        },
        "contentType": "application/json",
        "value": "[reference(variables('serverPubIP'), '2017-03-30').dnsSettings.fqdn]"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[couchbase.generateResourceName('server-main')]",
      "location": "[parameters('location')]",
      "apiVersion": "2021-11-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet').name)]",
        "[resourceId('Microsoft.KeyVault/vaults', couchbase.generateResourceName('vault'))]",
        "[resourceId('Microsoft.Authorization/roleAssignments', variables('assignmentReaderGuid'))]"
      ],
      "tags": {
        "couchbase-server-version": "[parameters('serverVersion')]",
        "couchbase-server-make-cluster": "true",
        "couchbase-server-services": "[couchbase.arrayToCSV(parameters('services'))]",
        "key-vault": "[couchbase.generateResourceName('vault')]",
        "couchbase-server-disk": "0",
        "couchbase-server-secret": "cb-secret"
      },
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', couchbase.generateResourceName('identity'))]": {}
        }
      },
      // "plan": {
      //   "publisher": "[parameters('publisher')]",
      //   "product": "[parameters('offer')]",
      //   "name": "[parameters('license')]"
      // },
      "sku": {
        "name": "[parameters('vmSize')]",
        "tier": "Standard",
        "capacity": "[parameters('serverNodeCount')]"
      },
      "properties": {
        "overprovision": false,
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage",
              // This is for local testing.  Once images are posted use "imageReference"
              //"image": { "uri": "https://jatestnewvm1.blob.core.windows.net/vhds/cb-server-01242022.vhd" },
              "osType": "Linux",
              "diskSizeGB": 30,
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
             "imageReference": {
              "id": "/subscriptions/a384b1e1-47d0-4067-8d5e-8d9e16e650e4/resourceGroups/ja-test-one/providers/Microsoft.Compute/images/ja-test-image"
            //   "publisher": "[parameters('publisher')]",
            //   "offer": "[parameters('offer')]",
            //   "sku": "[parameters('license')]",
            //   "version": "[parameters('image_version')]"
            },
            "dataDisks": [
              {
                "lun": 0,
                "createOption": "Empty",
                "managedDisk": {
                  "storageAccountType": "Premium_LRS"
                },
                "caching": "None",
                "diskSizeGB": "[parameters('serverDiskSize')]"
              }
            ]
          },
          "osProfile": "[couchbase.getProfileWithPrefix(variables('osProfile'), couchbase.generateResourceName('server-main'))]",
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[couchbase.generateResourceName('server-nic')]",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "[couchbase.generateResourceName('server-ipconfig')]",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet').name ,parameters('vnet').subnets.subnet1.name)]"
                        },
                        "publicipaddressconfiguration": {
                          "name": "[couchbase.generateResourceName('server-public-ip')]",
                          "properties": {
                            "idleTimeoutInMinutes": 30,
                            "dnsSettings": {
                              "domainNameLabel": "[concat('server-', variables('uniqueString'))]"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": []
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[couchbase.generateResourceName(concat('server-', copyIndex()))]",
      "copy": {
        "name": "mds-count-copy",
        "count": "[length(parameters('mdsConfig'))]",
        "mode": "Parallel"
      },
      "condition": "[parameters('enableMDS')]",
      "location": "[parameters('location')]",
      "apiVersion": "2021-11-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet').name)]",
        "[resourceId('Microsoft.KeyVault/vaults', couchbase.generateResourceName('vault'))]",
        "[resourceId('Microsoft.Authorization/roleAssignments', variables('assignmentReaderGuid'))]",
        "[resourceId('Microsoft.Compute/virtualMachineScaleSets', couchbase.generateResourceName('server-main'))]"
      ],
      "tags": {
        "couchbase-server-version": "[parameters('serverVersion')]",
        "couchbase-server-make-cluster": "false",
        "couchbase-server-rally-parameter": "cb-rally",
        "couchbase-server-services": "[couchbase.arrayToCSV(parameters('mdsConfig')[copyIndex()].colServices)]",
        "key-vault": "[couchbase.generateResourceName('vault')]",
        "couchbase-server-disk": "0",
        "couchbase-server-secret": "cb-secret"
      },
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', couchbase.generateResourceName('identity'))]": {}
        }
      },
      // "plan": {
      //   "publisher": "[parameters('publisher')]",
      //   "product": "[parameters('offer')]",
      //   "name": "[parameters('license')]"
      // },
      "sku": {
        "name": "[parameters('mdsConfig')[copyIndex()].colSize]",
        "tier": "Standard",
        "capacity": "[parameters('mdsConfig')[copyIndex()].colCount]"
      },
      "properties": {
        "overprovision": false,
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage",
              // This is for local testing.  Once images are posted use "imageReference"
              //"image": { "uri": "https://jatestnewvm1.blob.core.windows.net/vhds/cb-server-01242022.vhd" },
              "osType": "Linux",
              "diskSizeGB": 30,
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
             "imageReference": {
              "id": "/subscriptions/a384b1e1-47d0-4067-8d5e-8d9e16e650e4/resourceGroups/ja-test-one/providers/Microsoft.Compute/images/ja-test-image"
            //   "publisher": "[parameters('publisher')]",
            //   "offer": "[parameters('offer')]",
            //   "sku": "[parameters('license')]",
            //   "version": "[parameters('image_version')]"
            },
            "dataDisks": [
              {
                "lun": 0,
                "createOption": "Empty",
                "managedDisk": {
                  "storageAccountType": "Premium_LRS"
                },
                "caching": "None",
                "diskSizeGB": "[parameters('mdsConfig')[copyIndex()].colDiskSize]"
              }
            ]
          },
          "osProfile": "[couchbase.getProfileWithPrefix(variables('osProfile'), couchbase.generateResourceName(concat('server-', copyIndex())))]",
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[couchbase.generateResourceName(concat('server-nic-', copyIndex()))]",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "[couchbase.generateResourceName(concat('server-ipconfig-', copyIndex()))]",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet').name ,parameters('vnet').subnets.subnet1.name)]"
                        },
                        "publicipaddressconfiguration": {
                          "name": "[couchbase.generateResourceName(concat('server-public-ip-', copyIndex()))]",
                          "properties": {
                            "idleTimeoutInMinutes": 30,
                            "dnsSettings": {
                              "domainNameLabel": "[concat('server-', copyIndex(), '-', variables('uniqueString'))]"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": []
          }
        }
      }
    }
  ],
  "outputs": {
    "serverAdminURL": {
      "type": "string",
      "value": "[concat('http://', reference(variables('serverPubIP'), '2017-03-30').dnsSettings.fqdn, ':8091')]"
    }
  }
}