{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "authenticationType": {
      "type": "string"
    },
    "sshPublicKey": {
      "type": "string",
      "defaultValue": ""
    },
    "syncGatewayNodeCount": {
      "type": "int"
    },
    "syncGatewayVersion": {
      "type": "string"
    },
    "couchbaseConnectionString": {
      "type": "string"
    },
    "couchbaseUsername": {
      "type": "string"
    },
    "couchbasePassword": {
      "type": "string"
    },
    "couchbaseBucket": {
      "type": "string"
    },
    "vmSize": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser"
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": ""
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "vnet": {
      "type": "object",
      "defaultValue": {
        "value": {
          "name": "Couchbase-Vnet",
          "resourceGroup": "",
          "addressPrefixes": [
            "10.32.0.0/16"
          ],
          "addressPrefix": "10.32.0.0/16",
          "newOrExisting": "new",
          "subnets": {
            "subnet1": {
              "name": "CouchbaseSubnet",
              "addressPrefix": "10.32.0.0/24",
              "startAddress": "10.32.0.4"
            }
          }
        }
      }
    },
    "publisher": {
      "type": "string",
      "defaultValue": "<<PUBLISHER>>"
    },
    "sync_gateway_offer": {
      "type": "string",
      "defaultValue": "<<SYNC_GATEWAY_OFFER>>"
    },
    "sync_gateway_image_version": {
      "type": "string",
      "defaultValue": "<<SYNC_GATEWAY_IMAGE_VERSION>>"
    },
    "sync_gateway_sku": {
      "type": "string",
      "defaultValue": "<<SYNC_GATEWAY_SKU>>"
    },
    "_now": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    }
  },
  "functions": [
    {
      "namespace": "couchbase",
      "members": {
        "generateResourceName": {
          "parameters": [
            {
              "name": "resource",
              "type": "string"
            }
          ],
          "output": {
            "type": "string",
            "value": "[concat('cb-', parameters('resource'), '-', uniquestring(resourceGroup().id, deployment().name))]"
          }
        },
        "getProfileWithPrefix": {
            "parameters": [
              {
                "name": "profile",
                "type": "object"
              },
              {
                "name": "prefix",
                "type": "string"
              }
            ],
            "output": {
              "type": "object",
              "value": "[union(parameters('profile'), json(concat('{\"computerNamePrefix\":\"', parameters('prefix'), '\"}')))]"
            }
          }
      }
    }
  ],
  "variables": {
    "password_osProfile": {
      "adminUsername": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]"
    },
    "sshPublicKey_osProfile": {
      "adminUsername": "[parameters('adminUsername')]",
      "linuxConfiguration": {
        "disablePasswordAuthentication": "true",
        "ssh": {
          "publicKeys": [{
            "path": "/home/azureuser/.ssh/authorized_keys",
            "keyData": "[parameters('sshPublicKey')]"
          }]
        }
      }
    },
    "osProfile": "[variables(concat(parameters('authenticationType'), '_osProfile'))]",
    "secretValue": {
      "username": "[parameters('couchbaseUsername')]",
      "password": "[parameters('couchbasePassword')]"
    },
    "subscriptionReader": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
    "assignmentReaderGuid": "[guid(subscription().subscriptionId, parameters('_now'))]"
  },
  "resources": [
    {
      "apiVersion": "2019-11-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[couchbase.generateResourceName('networkSecurityGroups')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "description": "SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "SyncGateway",
            "properties": {
              "description": "Sync Gateway",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "4984-4985",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound"
            }
          },
          {
            "name": "Server",
            "properties": {
              "description": "Server",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8091-8096",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 103,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('vnet').name]",
      "type": "Microsoft.Network/virtualNetworks",
      "condition": "[equals(parameters('vnet').newOrExisting, 'new')]",
      "apiVersion": "2019-04-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups/', couchbase.generateResourceName('networkSecurityGroups'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": "[parameters('vnet').addressPrefixes]"
        },
        "subnets": [
          {
            "name": "[parameters('vnet').subnets.subnet1.name]",
            "properties": {
              "addressPrefix": "[parameters('vnet').subnets.subnet1.addressPrefix]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', couchbase.generateResourceName('networkSecurityGroups'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[couchbase.generateResourceName('sg-lb-ip')]",
      "apiVersion": "2020-06-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[couchbase.generateResourceName('sg-lb-ip-outbound')]",
      "apiVersion": "2020-06-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[couchbase.generateResourceName('sg-lb')]",
      "apiVersion": "2020-06-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIpAddresses', couchbase.generateResourceName('sg-lb-ip'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', couchbase.generateResourceName('sg-lb-ip-outbound'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[couchbase.generateResourceName('sg-lb-front-end')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', couchbase.generateResourceName('sg-lb-ip'))]"
              }
            }
          },
          {
            "name": "[couchbase.generateResourceName('sg-lb-front-end-outbound')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', couchbase.generateResourceName('sg-lb-ip-outbound'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[couchbase.generateResourceName('sg-lb-backend-pool-name')]"
          },
          {
            "name": "[couchbase.generateResourceName('sg-lb-backend-pool-outbound-name')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "[couchbase.generateResourceName('sg-lb-rule-base-api')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', couchbase.generateResourceName('sg-lb'), couchbase.generateResourceName('sg-lb-front-end'))]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools',couchbase.generateResourceName('sg-lb'),couchbase.generateResourceName('sg-lb-backend-pool-name'))]"
              },
              "frontendPort": 4984,
              "backendPort": 4984,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 15,
              "protocol": "Tcp",
              "enableTcpReset": true,
              "loadDistribution": "Default",
              "disableOutboundSnat": true,
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', couchbase.generateResourceName('sg-lb'),'base-api')]"
              }
            }
          },
          {
            "name": "[couchbase.generateResourceName('sg-lb-rule-admin-api')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations',couchbase.generateResourceName('sg-lb'),couchbase.generateResourceName('sg-lb-front-end'))]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools',couchbase.generateResourceName('sg-lb'),couchbase.generateResourceName('sg-lb-backend-pool-name'))]"
              },
              "frontendPort": 4985,
              "backendPort": 4985,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 15,
              "protocol": "Tcp",
              "enableTcpReset": true,
              "loadDistribution": "Default",
              "disableOutboundSnat": true,
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', couchbase.generateResourceName('sg-lb'), 'admin-api')]"
              }
            }
          },
          {
            "name": "[couchbase.generateResourceName('sg-lb-rule-metrics')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations',couchbase.generateResourceName('sg-lb'),couchbase.generateResourceName('sg-lb-front-end'))]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', couchbase.generateResourceName('sg-lb'), couchbase.generateResourceName('sg-lb-backend-pool-name'))]"
              },
              "frontendPort": 4986,
              "backendPort": 4986,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 15,
              "protocol": "Tcp",
              "enableTcpReset": true,
              "loadDistribution": "Default",
              "disableOutboundSnat": true,
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', couchbase.generateResourceName('sg-lb'), 'metrics-api')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "base-api",
            "properties": {
              "protocol": "Http",
              "port": 4984,
              "requestPath": "/",
              "intervalInSeconds": 10,
              "numberOfProbes": 2
            }
          },
          {
            "name": "admin-api",
            "properties": {
              "protocol": "Http",
              "port": 4985,
              "requestPath": "/",
              "intervalInSeconds": 10,
              "numberOfProbes": 2
            }
          },
          {
            "name": "metrics-api",
            "properties": {
              "protocol": "Http",
              "port": 4986,
              "requestPath": "/",
              "intervalInSeconds": 10,
              "numberOfProbes": 2
            }
          }
        ],
        "outboundRules": [
          {
            "name": "[couchbase.generateResourceName('sg-lb-outbound-rule')]",
            "properties": {
              "allocatedOutboundPorts": 10000,
              "protocol": "All",
              "enableTcpReset": false,
              "idleTimeoutInMinutes": 15,
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', couchbase.generateResourceName('sg-lb'), couchbase.generateResourceName('sg-lb-backend-pool-outbound-name'))]"
              },
              "frontendIPConfigurations": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations',couchbase.generateResourceName('sg-lb'), couchbase.generateResourceName('sg-lb-front-end-outbound'))]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "name": "[couchbase.generateResourceName('identity')]",
      "apiVersion": "2018-11-30",
      "location": "[resourceGroup().location]"
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2018-09-01-preview",
      "name": "[variables('assignmentReaderGuid')]",
      "dependsOn": [
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', couchbase.generateResourceName('identity'))]"
      ],
      "properties": {
          "roleDefinitionId": "[variables('subscriptionReader')]",
          "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', couchbase.generateResourceName('identity')), '2018-11-30').principalId]",
          "principalType": "ServicePrincipal"
      }
    },      
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2019-09-01",
      "name": "[couchbase.generateResourceName('vault')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', couchbase.generateResourceName('identity'))]",
        "[resourceId('Microsoft.Authorization/roleAssignments', variables('assignmentReaderGuid'))]"
      ],
      "tags": {},
      "properties": {
        "enabledForDeployment": true,
        "enabledForTemplateDeployment": true,
        "enabledForDiskEncryption": false,
        "enableRbacAuthorization": false,
        "accessPolicies": [
          {
            "objectId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', couchbase.generateResourceName('identity')), '2018-11-30').principalId]",
            "permissions": {
              "secrets": [
                "Get",
                "List",
                "Set",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ]
            },
            "tenantId": "[subscription().tenantId]"
          }
        ],
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "name": "Standard",
          "family": "A"
        },
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices",
          "ipRules": [],
          "virtualNetworkRules": []
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/{1}', couchbase.generateResourceName('vault'), 'cb-secret')]",
      "dependsOn": ["[resourceId('Microsoft.KeyVault/vaults', couchbase.generateResourceName('vault'))]"],
      "properties": {
        "attributes": {
          "enabled": true
        },
        "contentType": "application/json",
        "value": "[string(variables('secretValue'))]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/{1}', couchbase.generateResourceName('vault'), 'cb-connection-string')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', couchbase.generateResourceName('vault'))]"
      ],
      "properties": {
        "attributes": {
          "enabled": true
        },
        "contentType": "application/json",
        "value": "[parameters('couchbaseConnectionString')]"
      }
    },    
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[couchbase.generateResourceName('syncgateway')]",
      "location": "[parameters('location')]",
      "apiVersion": "2019-03-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet').name)]",
        "[resourceId('Microsoft.Network/loadBalancers', couchbase.generateResourceName('sg-lb'))]",
        "[resourceId('Microsoft.KeyVault/vaults', couchbase.generateResourceName('vault'))]",
        "[resourceId('Microsoft.Authorization/roleAssignments', variables('assignmentReaderGuid'))]"
      ],
      "tags": {
        "key-vault": "[couchbase.generateResourceName('vault')]",
        "couchbase-gateway-version": "[parameters('syncGatewayVersion')]",
        "couchbase-gateway-secret": "cb-secret",
        "couchbase-gateway-connection-parameter": "cb-connection-string",
        "couchbase-gateway-bucket": "[parameters('couchbaseBucket')]"
      },
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', couchbase.generateResourceName('identity'))]": {}
        }
      },
      "plan": {
        "publisher": "[parameters('publisher')]",
        "product": "[parameters('sync_gateway_offer')]",
        "name": "[parameters('sync_gateway_sku')]"
      },
      "sku": {
        "name": "[parameters('vmSize')]",
        "tier": "Standard",
        "capacity": "[parameters('syncGatewayNodeCount')]"
      },
      "properties": {
        "overprovision": false,
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage"
            },
            "imageReference": {
              "publisher": "[parameters('publisher')]",
              "offer": "[parameters('sync_gateway_offer')]",
              "sku": "[parameters('sync_gateway_sku')]",
              "version": "[parameters('sync_gateway_image_version')]"
            }
          },
          "osProfile": "[couchbase.getProfileWithPrefix(variables('osProfile'), couchbase.generateResourceName('gateway'))]",
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[couchbase.generateResourceName('syncgateway-nic')]",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "[couchbase.generateResourceName('syncgateway-ipconfig')]",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet').name, parameters('vnet').subnets.subnet1.name)]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', couchbase.generateResourceName('sg-lb'), couchbase.generateResourceName('sg-lb-backend-pool-name'))]"
                          },
                          {
                            "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', couchbase.generateResourceName('sg-lb'), couchbase.generateResourceName('sg-lb-backend-pool-outbound-name'))]"
                          }
                        ]
                      }
                    }
                  ],
                  "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', couchbase.generateResourceName('networkSecurityGroups'))]"
                  }
                }
              }
            ]
          }
        }
      }
    }
  ],
  "outputs": {
    "syncGatewayAdminURL": {
      "type": "string",
      "value": "[concat('http://', reference(resourceId('Microsoft.Network/publicIPAddresses', couchbase.generateResourceName('sg-lb-ip'))).ipAddress, ':4985/_admin/', 'n/a')]"
    }
  }
}