{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "serverNodeCount": {
      "type": "int"
    },
    "serverDiskSize": {
      "type": "int"
    },
    "serverVersion": {
      "type": "string"
    },
    "syncGatewayNodeCount": {
      "type": "int"
    },
    "syncGatewayVersion": {
      "type": "string"
    },
    "vmSize": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "license": {
      "type": "string",
      "defaultValue": "<<LICENSE>>"
    },
    "publisher": {
      "type": "string",
      "defaultValue": "<<PUBLISHER>>"
    },
    "offer": {
      "type": "string",
      "defaultValue": "<<OFFER>>"
    },
    "image_version": {
      "type": "string",
      "defaultValue": "<<IMAGE_VERSION>>"
    },
    "sync_gateway_offer": {
      "type": "string",
      "defaultValue": "<<SYNC_GATEWAY_OFFER>>"
    },
    "sync_gateway_image_version": {
      "type": "string",
      "defaultValue": "<<SYNC_GATEWAY_IMAGE_VERSION>>"
    },
    "sync_gateway_sku": {
      "type": "string",
      "defaultValue": "<<SYNC_GATEWAY_SKU>>"
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located including a trailing '/'"
      },
      "defaultValue": "[deployment().properties.templateLink.uri]"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
          "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
      },
      "defaultValue": ""
   }
  },
  "functions":[
      {
        "namespace": "couchbase",
        "members": {
            "generateResourceName": {
                "parameters": [{
                  "name": "resource",
                  "type": "string"
                }],
                "output": {
                  "type": "string",
                  "value": "[
                              concat(
                                      'cb-', 
                                      parameters('resource'),
                                      '-', 
                                      uniquestring(resourceGroup().id, deployment().name)
                                    )
                            ]"
                }
          }
        }
    }
  ],
  "variables": {
    "uniqueString": "[uniquestring(resourceGroup().id, deployment().name)]",
    "serverPubIP": "[
                      concat(
                        resourceGroup().id, 
                        '/providers/Microsoft.Compute/virtualMachineScaleSets/',
                        couchbase.generateResourceName('server'), 
                        '/virtualMachines/0/networkInterfaces/',
                        couchbase.generateResourceName('server-nic'),
                        '/ipConfigurations/',
                        couchbase.generateResourceName('server-ipconfig'),
                        '/publicIPAddresses/',
                        couchbase.generateResourceName('server-public-ip')
                      )
                    ]"
  },
  "resources": [
    {
      "apiVersion": "2019-11-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[couchbase.generateResourceName('networkSecurityGroups')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "description": "SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "ErlangPortMapper",
            "properties": {
              "description": "Erlang Port Mapper (epmd)",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "4369",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "SyncGateway",
            "properties": {
              "description": "Sync Gateway",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "4984-4985",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound"
            }
          },
          {
            "name": "Server",
            "properties": {
              "description": "Server",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8091-8096",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 103,
              "direction": "Inbound"
            }
          },
          {
            "name": "Index",
            "properties": {
              "description": "Index",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "9100-9105",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 104,
              "direction": "Inbound"
            }
          },
          {
            "name": "Analytics",
            "properties": {
              "description": "Analytics",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "9110-9122",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 105,
              "direction": "Inbound"
            }
          },          
          {
            "name": "FTSGrpcPort",
            "properties": {
              "description": "FTSGrpcPort",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "9130",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          {
            "name": "Internal",
            "properties": {
              "description": "Internal",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "9998-9999",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 106,
              "direction": "Inbound"
            }
          },
          {
            "name": "XDCR",
            "properties": {
              "description": "XDCR",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "11207-11215",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 107,
              "direction": "Inbound"
            }
          },
          {
            "name": "SSL",
            "properties": {
              "description": "SSL",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "18091-18096",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 108,
              "direction": "Inbound"
            }
          },
          {
            "name": "NodeDataExchange",
            "properties": {
              "description": "Node data exchange",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "21100-21299",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 109,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "name": "[couchbase.generateResourceName('vnet')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-04-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups/', couchbase.generateResourceName('networkSecurityGroups'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/23"
          ]
        },
        "subnets": [
          {
            "name": "[couchbase.generateResourceName('subnet')]",
            "properties": {
              "addressPrefix": "10.0.0.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', couchbase.generateResourceName('networkSecurityGroups'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[couchbase.generateResourceName('server')]",
      "location": "[parameters('location')]",
      "apiVersion": "2019-03-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', couchbase.generateResourceName('vnet'))]"
      ],
      "plan": {
        "publisher": "[parameters('publisher')]",
        "product": "[parameters('offer')]",
        "name": "[parameters('license')]"
      },
      "sku": {
        "name": "[parameters('vmSize')]",
        "tier": "Standard",
        "capacity": "[parameters('serverNodeCount')]"
      },
      "properties": {
        "overprovision": false,
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage"
            },
            "imageReference": {
              "publisher": "[parameters('publisher')]",
              "offer": "[parameters('offer')]",
              "sku": "[parameters('license')]",
              "version": "[parameters('image_version')]"
            },
            "dataDisks": [
              {
                "lun": 0,
                "createOption": "Empty",
                "managedDisk": {
                  "storageAccountType": "Premium_LRS"
                },
                "caching": "None",
                "diskSizeGB": "[parameters('serverDiskSize')]"
              }
            ]
          },
          "osProfile": {
            "computerNamePrefix": "[couchbase.generateResourceName('server')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[couchbase.generateResourceName('server-nic')]",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "[couchbase.generateResourceName('server-ipconfig')]",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', couchbase.generateResourceName('vnet'), couchbase.generateResourceName('subnet'))]"
                        },
                        "publicipaddressconfiguration": {
                          "name": "[couchbase.generateResourceName('server-public-ip')]",
                          "properties": {
                            "idleTimeoutInMinutes": 30,
                            "dnsSettings": {
                              "domainNameLabel": "[concat('server-', variables('uniqueString'))]"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "[couchbase.generateResourceName('server-extension')]",
                "properties": {
                  "publisher": "Microsoft.Azure.Extensions",
                  "type": "CustomScript",
                  "typeHandlerVersion": "2.0",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "fileUris": [
                      "[uri(parameters('_artifactsLocation'), concat('couchbase_installer.sh', parameters('_artifactsLocationSasToken')))]"
                    ]
                  },
                  "protectedSettings": {
                      "commandToExecute": "[
                                             concat(
                                              'bash couchbase_installer.sh -v ',
                                              parameters('serverVersion'),
                                              ' -u ',
                                              parameters('adminUsername'),
                                              ' -p ',
                                              parameters('adminPassword'),
                                              ' -ch ',
                                              concat(
                                                couchbase.generateResourceName('server'),
                                                '000000'
                                              ),
                                              ' -os UBUNTU -c -e AZURE -d'
                                            )
                                          ]"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[couchbase.generateResourceName('sg-lb-ip')]",
      "condition": "[not(equals(parameters('syncGatewayNodeCount'), 0))]",
      "apiVersion": "2020-06-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[couchbase.generateResourceName('sg-lb-ip-outbound')]",
      "condition": "[not(equals(parameters('syncGatewayNodeCount'), 0))]",
      "apiVersion": "2020-06-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[couchbase.generateResourceName('sg-lb')]",
      "condition": "[not(equals(parameters('syncGatewayNodeCount'), 0))]",
      "apiVersion": "2020-06-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIpAddresses', couchbase.generateResourceName('sg-lb-ip'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', couchbase.generateResourceName('sg-lb-ip-outbound'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[couchbase.generateResourceName('sg-lb-front-end')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', couchbase.generateResourceName('sg-lb-ip'))]"
              }
            }
          },
          {
            "name": "[couchbase.generateResourceName('sg-lb-front-end-outbound')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', couchbase.generateResourceName('sg-lb-ip-outbound'))]"
              }
            }
          }
        ],
        "backendAddressPools":[
          {
            "name": "[couchbase.generateResourceName('sg-lb-backend-pool-name')]"
          },
          {
            "name": "[couchbase.generateResourceName('sg-lb-backend-pool-outbound-name')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "[couchbase.generateResourceName('sg-lb-rule-base-api')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId(
                            'Microsoft.Network/loadBalancers/frontendIPConfigurations', 
                            couchbase.generateResourceName('sg-lb'), 
                            couchbase.generateResourceName('sg-lb-front-end')
                          )
                        ]"
              },
              "backendAddressPool": {
                "id": "[resourceId(
                            'Microsoft.Network/loadBalancers/backendAddressPools', 
                            couchbase.generateResourceName('sg-lb'), 
                            couchbase.generateResourceName('sg-lb-backend-pool-name')
                          )
                        ]"
              },
              "frontendPort": 4984,
              "backendPort": 4984,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 15,
              "protocol": "Tcp",
              "enableTcpReset": true,
              "loadDistribution": "Default",
              "disableOutboundSnat": true,
              "probe": {  
                "id": "[resourceId(
                            'Microsoft.Network/loadBalancers/probes', 
                            couchbase.generateResourceName('sg-lb'), 
                            'base-api'
                          )
                        ]"
              }
            }
          },
          {
            "name": "[couchbase.generateResourceName('sg-lb-rule-admin-api')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId(
                            'Microsoft.Network/loadBalancers/frontendIPConfigurations', 
                            couchbase.generateResourceName('sg-lb'), 
                            couchbase.generateResourceName('sg-lb-front-end')
                          )
                        ]"
              },
              "backendAddressPool": {
                "id": "[resourceId(
                            'Microsoft.Network/loadBalancers/backendAddressPools', 
                            couchbase.generateResourceName('sg-lb'), 
                            couchbase.generateResourceName('sg-lb-backend-pool-name')
                          )
                        ]"
              },
              "frontendPort": 4985,
              "backendPort": 4985,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 15,
              "protocol": "Tcp",
              "enableTcpReset": true,
              "loadDistribution": "Default",
              "disableOutboundSnat": true,
              "probe": {  
                "id": "[resourceId(
                            'Microsoft.Network/loadBalancers/probes', 
                            couchbase.generateResourceName('sg-lb'), 
                            'admin-api'
                          )
                        ]"
              }
            }
          },
          {
            "name": "[couchbase.generateResourceName('sg-lb-rule-metrics')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId(
                            'Microsoft.Network/loadBalancers/frontendIPConfigurations', 
                            couchbase.generateResourceName('sg-lb'), 
                            couchbase.generateResourceName('sg-lb-front-end')
                          )
                        ]"
              },
              "backendAddressPool": {
                "id": "[resourceId(
                            'Microsoft.Network/loadBalancers/backendAddressPools', 
                            couchbase.generateResourceName('sg-lb'), 
                            couchbase.generateResourceName('sg-lb-backend-pool-name')
                          )
                        ]"
              },
              "frontendPort": 4986,
              "backendPort": 4986,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 15,
              "protocol": "Tcp",
              "enableTcpReset": true,
              "loadDistribution": "Default",
              "disableOutboundSnat": true,
              "probe": {  
                "id": "[resourceId(
                            'Microsoft.Network/loadBalancers/probes', 
                            couchbase.generateResourceName('sg-lb'), 
                            'metrics-api'
                          )
                        ]"
              }
            }
          }
        ],
        "probes":[
        {
          "name": "base-api",
          "properties": {
            "protocol": "Http",
            "port": 4984,
            "requestPath": "/",
            "intervalInSeconds": 10,
            "numberOfProbes": 2
          }
        },{
          "name": "admin-api",
          "properties": {
            "protocol": "Http",
            "port": 4985,
            "requestPath": "/",
            "intervalInSeconds": 10,
            "numberOfProbes": 2
          }
        },{
          "name": "metrics-api",
          "properties": {
            "protocol": "Http",
            "port": 4986,
            "requestPath": "/",
            "intervalInSeconds": 10,
            "numberOfProbes": 2
          }
        }],
        "outboundRules":[
          {
            "name": "[couchbase.generateResourceName('sg-lb-outbound-rule')]",
            "properties": {
              "allocatedOutboundPorts": 10000,
              "protocol": "All",
              "enableTcpReset": false,
              "idleTimeoutInMinutes": 15,
              "backendAddressPool": {
                "id": "[resourceId(
                            'Microsoft.Network/loadBalancers/backendAddressPools', 
                            couchbase.generateResourceName('sg-lb'), 
                            couchbase.generateResourceName('sg-lb-backend-pool-outbound-name')
                            )
                       ]"
              },
              "frontendIPConfigurations": [
                {
                  "id": "[resourceId(
                            'Microsoft.Network/loadBalancers/frontendIpConfigurations',
                            couchbase.generateResourceName('sg-lb'), 
                            couchbase.generateResourceName('sg-lb-front-end-outbound')
                            )
                         ]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[couchbase.generateResourceName('syncgateway')]",
      "condition": "[not(equals(parameters('syncGatewayNodeCount'), 0))]",
      "location": "[parameters('location')]",
      "apiVersion": "2019-03-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', couchbase.generateResourceName('vnet'))]",
        "[resourceId('Microsoft.Network/loadBalancers', couchbase.generateResourceName('sg-lb'))]"
      ],
      "plan": {
        "publisher": "[parameters('publisher')]",
        "product": "[parameters('sync_gateway_offer')]",
        "name": "[parameters('sync_gateway_sku')]"
      },
      "sku": {
        "name": "[parameters('vmSize')]",
        "tier": "Standard",
        "capacity": "[parameters('syncGatewayNodeCount')]"
      },
      "properties": {
        "overprovision": false,
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage"
            },
            "imageReference": {
              "publisher": "[parameters('publisher')]",
              "offer": "[parameters('sync_gateway_offer')]",
              "sku": "[parameters('sync_gateway_sku')]",
              "version": "[parameters('sync_gateway_image_version')]"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[couchbase.generateResourceName('syncgateway')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[couchbase.generateResourceName('syncgateway-nic')]",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "[couchbase.generateResourceName('syncgateway-ipconfig')]",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 
                                              couchbase.generateResourceName('vnet'), 
                                              couchbase.generateResourceName('subnet')
                                )]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[resourceId(
                                        'Microsoft.Network/loadBalancers/backendAddressPools', 
                                        couchbase.generateResourceName('sg-lb'), 
                                        couchbase.generateResourceName('sg-lb-backend-pool-name'))]"
                          },
                          {
                            "id": "[resourceId(
                                        'Microsoft.Network/loadBalancers/backendAddressPools', 
                                        couchbase.generateResourceName('sg-lb'), 
                                        couchbase.generateResourceName('sg-lb-backend-pool-outbound-name'))]"
                          }
                        ]
                      }
                    }
                  ],
                  "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', couchbase.generateResourceName('networkSecurityGroups'))]"
                  }
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "[couchbase.generateResourceName('syncgateway-extension')]",
                "properties": {
                  "publisher": "Microsoft.Azure.Extensions",
                  "type": "CustomScript",
                  "typeHandlerVersion": "2.0",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "fileUris": [
                      "[uri(parameters('_artifactsLocation'), concat('couchbase_installer.sh', parameters('_artifactsLocationSasToken')))]"
                    ]
                  },
                  "protectedSettings": {
                      "commandToExecute": "[
                                            concat(
                                              'bash couchbase_installer.sh -v ',
                                              parameters('syncGatewayVersion'),
                                              ' -u ',
                                              parameters('adminUsername'),
                                              ' -p ',
                                              parameters('adminPassword'),
                                              ' -os UBUNTU -g -e AZURE -ch ',
                                              concat(
                                                couchbase.generateResourceName('server'),
                                                '000000'
                                              )
                                            )
                                          ]"
                  }
                }
              }
            ]
          }
        }
      }
    }
  ],
  "outputs": {
    "serverAdminURL": {
      "type": "string",
      "value": "[concat('http://', reference(variables('serverPubIP'), '2017-03-30').dnsSettings.fqdn, ':8091')]"
    },
    "syncGatewayAdminURL": {
      "type": "string",
      "value": "[
        if(
          not(
            equals(parameters('syncGatewayNodeCount'), 0)
            ),
          concat('http://', 
                 reference(
                      resourceId(
                        'Microsoft.Network/publicIPAddresses', 
                        couchbase.generateResourceName('sg-lb-ip')
                        )
                    ).ipAddress, 
                 ':4985/_admin/'), 
          'n/a') 
        ]"
    }
  }
}