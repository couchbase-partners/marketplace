# This is a basic workflow to help you get started with Actions

name: GCP - CouchbaseServerAndSyncGatewayBYOL

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
      - 'gcp/couchbase-server/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  BYOLLaunch:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: GCP Setup
        uses: google-github-actions/setup-gcloud@v0
        with: 
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Echo $GITHUB_WORKSPACE
        run: echo "$GITHUB_WORKSPACE"
      # Runs a set of commands using the runners shell
      - name: Deploy To GCP
        timeout-minutes: 15
        run: bash ${GITHUB_WORKSPACE}/gcp/couchbase-server/deploy.sh -n cb-server-byol -b
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Install CouchbaseVerifier
        run: |
          dotnet tool install CouchbaseVerifier --global --version 1.0.5
      - name: Run mds tests
        run: |
          DNS=$(${GITHUB_WORKSPACE}/gcp/couchbase-server/ip_retrieval.sh -n cb-server-byol)
          USERNAME=$(cat ./test_config.local.yaml | yq '.resources[0].properties.username')
          PASSWORD=$(cat ./test_config.local.yaml | yq '.resources[0].properties.password')
          CouchbaseVerifier verify --host "http://${DNS}:8091" -u "$USERNAME" -p "$PASSWORD" -d ${GITHUB_WORKSPACE}/gcp/couchbase-server/test_definitions/defaults.json
      - name: Teardown From GCP
        run: bash ${GITHUB_WORKSPACE}/gcp/couchbase-server/backout.sh -n cb-server-byol
  HourlyLaunch:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: GCP Setup
        uses: google-github-actions/setup-gcloud@v0
        with: 
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Echo $GITHUB_WORKSPACE
        run: echo "$GITHUB_WORKSPACE"
      # Runs a set of commands using the runners shell
      - name: Deploy To GCP
        timeout-minutes: 15
        run: bash ${GITHUB_WORKSPACE}/gcp/couchbase-server/deploy.sh -n cb-server-hourly
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Install CouchbaseVerifier
        run: |
          dotnet tool install CouchbaseVerifier --global --version 1.0.5
      - name: Run mds tests
        run: |
          DNS=$(${GITHUB_WORKSPACE}/gcp/couchbase-server/ip_retrieval.sh -n cb-server-hourly)
          USERNAME=$(cat ./test_config.local.yaml | yq '.resources[0].properties.username')
          PASSWORD=$(cat ./test_config.local.yaml | yq '.resources[0].properties.password')
          CouchbaseVerifier verify --host "http://${DNS}:8091" -u "$USERNAME" -p "$PASSWORD" -d ${GITHUB_WORKSPACE}/gcp/couchbase-server/test_definitions/defaults.json
      - name: Teardown From GCP
        run: bash ${GITHUB_WORKSPACE}/gcp/couchbase-server/backout.sh -n cb-server-hourly        