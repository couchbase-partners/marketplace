# This is a basic workflow to help you get started with Actions

name: AWS Release Workflow

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  release:
    types: [created]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  aws-release:
    if: "endsWith(github.event.release.tag_name, 'aws') || endsWith(github.event.release.tag_name, 'all')"
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: '15.x'
      - name: Build Combined Templates
        run: bash $GITHUB_WORKSPACE/aws/CouchbaseServerAndSyncGateway/makeArchives.sh
      - name: Upload CBS BYOL
        id: upload-cbs-byol-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/aws/CouchbaseServerAndSyncGateway/aws-cbs-byol.template
          asset_name: aws-cbs-byol.template
          asset_content_type: application/json
      - name: Upload CBS Hourly
        id: upload-cbs-hourly-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/aws/CouchbaseServerAndSyncGateway/aws-cbs-hourly-pricing.template
          asset_name: aws-cbs-hourly-pricing.template
          asset_content_type: application/json
      - name: Build Server Template
        run: |
          bash $GITHUB_WORKSPACE/aws/makeArchives.sh \
                                 -m "$GITHUB_WORKSPACE/aws/CouchbaseServer/mappings.json" \
                                 -s "$GITHUB_WORKSPACE/aws/CouchbaseServer/embedded_server.sh" \
                                 -o "$GITHUB_WORKSPACE/build/aws/CouchbaseServer/" \
                                 -n "aws-cb-server.template" \
                                 -i "$GITHUB_WORKSPACE/aws/CouchbaseServer/couchbase-amzn-lnx2.template" \
                                 -t "server"
      
      - name: Upload Server Template
        id: upload-server-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/aws/CouchbaseServer/aws-cb-server.template
          asset_name: aws-cb-server.template
          asset_content_type: application/json
      - name: Build Gateway Template
        run: |
          bash $GITHUB_WORKSPACE/aws/makeArchives.sh \
                                 -m "$GITHUB_WORKSPACE/aws/CouchbaseSyncGateway/mappings.json" \
                                 -s "$GITHUB_WORKSPACE/aws/CouchbaseSyncGateway/embedded_gateway.sh" \
                                 -o "$GITHUB_WORKSPACE/build/aws/CouchbaseSyncGateway/" \
                                 -n "aws-cb-syncgateway.template" \
                                 -i "$GITHUB_WORKSPACE/aws/CouchbaseSyncGateway/couchbase-amzn-lnx2.template" \
                                 -t "sync_gateway"
      - name: Upload Gateway Template
        id: upload-gateway-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/aws/CouchbaseSyncGateway/aws-cb-syncgateway.template
          asset_name: aws-cb-syncgateway.template
          asset_content_type: application/json
        
